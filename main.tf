/**
 * # Fortigate Hardware Switch module
 *
 * This terraform module creates a hardware switch on a FortiGate appliance.
 */

terraform {
  required_providers {
    fortios = {
      source  = "fortinetdev/fortios"
    }
  }
}

resource fortios_system_virtualswitch vsw {
  name    = var.name
  physical_switch = "sw0"

  dynamic port {
    for_each  =  { for port in var.ports : port => port}
    content {
      name      = port.value
    }
  }
  vdomparam = var.vdom
}

resource fortios_system_interface port {
  depends_on    = [ fortios_system_virtualswitch.vsw ]
  name          = var.name
  ip            = var.ip_addresses[0]
  vdom          = var.vdom
  autogenerated = "auto"
  allowaccess   = var.allowaccess
  secondary_ip  = length(var.ip_addresses) > 1 ? "enable" : "disable"
  dynamic secondaryip {
    for_each = { for ip in slice(var.ip_addresses, 1, length(var.ip_addresses)) : ip => ip}
    content {
      id          = index(slice(var.ip_addresses, 1, length(var.ip_addresses)), secondaryip.value) + 1
      ip          = secondaryip.value
      allowaccess = var.allowaccess
    }
  }
}
